@model BestTickets.Models.RouteViewModel

@{
    ViewBag.Title = "Best Tickets";
}

<div class="jumbotron jumbocolor text-center row">
    <div class="col-xs-12">
        <h1>Best tickets</h1>
        <h3>Выбор лучших билетов</h3>
    </div>
</div>

<div class="row text-center">
    <h4 class="text-center headerText marginSub">Выберите маршрут</h4>
</div>

<div class="text-center">
    @Html.ValidationMessageFor(x => x.DeparturePlace, null, new { @class = "text-danger" })<br />
    @Html.ValidationMessageFor(x => x.ArrivalPlace, null, new { @class = "text-danger" })<br /><br />
</div>

<div class="hidden-xs row">
    @using (Ajax.BeginForm("GetTickets", new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "tickets", InsertionMode = InsertionMode.Replace, LoadingElementId = "loader", OnBegin = "onBegin", OnComplete = "onComplete" }))
    {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-inline col-sm-12 col-md-offset-1 col-md-10 col-lg-offset-2 col-lg-8">
                    <div class="form-group col-sm-3">
                        @Html.TextBoxFor(x => x.DeparturePlace, new { @class = "form-control departurePlace", @placeholder = "Отправление" })
                    </div>
                    <div class="form-group spaceLeft  col-sm-3">
                        @Html.TextBoxFor(x => x.ArrivalPlace, new { @class = "form-control arrivalPlace", @placeholder = "Прибытие" })
                    </div>
                    <div class="form-group spaceLeft col-sm-3">
                        <input type="date" class="form-control" name="Date" />
                    </div>
                    <div class="form-group col-sm-3">
                        <input class="btn btn-default form-control" type="submit" value="Поиск" />
                    </div>
            </div>      
    } 
</div>
<div class="visible-xs row">
    @using (Ajax.BeginForm("GetTickets", new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "tickets", InsertionMode = InsertionMode.Replace , LoadingElementId = "loader", OnBegin = "onBegin", OnComplete = "onComplete"}))
    {

         @Html.AntiForgeryToken()
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal col-xs-12">
            <div class="row"></div>
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="form-group col-xs-10">
                    @Html.TextBoxFor(x => x.DeparturePlace, new { @class = "form-control departurePlace", @placeholder = "Отправление" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="form-group col-xs-10">
                    @Html.TextBoxFor(x => x.ArrivalPlace, new { @class = "form-control arrivalPlace", @placeholder = "Прибытие" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="form-group col-xs-10">
                    <input type="date" class="form-control" name="Date" />
                </div>
            </div>
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="form-group col-xs-4">
                    <input class="btn btn-default form-control" type="submit" value="Поиск" />
                </div>
            </div>
        </div>
        <div class="spaceAfterForm row"></div>
    } 
    
</div>

<div id="topRoutes" class="top10Routes row text-center">
    <br />
    <h4 class="headerText text-center">Наиболее частые маршруты</h4>
</div>

<div id="loader" class="loadingProgress"></div>
<div id="tickets" class="row" >
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ajax")
    <script>
        function onBegin() {
            $(".pageFade").show();
            $(".loadingProgress").show();
        }

        function onComplete() {
            $(".pageFade").hide();
            $(".loadingProgress").hide();
        }

        var routesUri = '../api/routes';

        $(document).ready(function () {
            $.getJSON(routesUri)
                .done(function (data) {
                    $.each(data, function (key, item) {
                        var spanElement = document.createElement("span");
                        spanElement.className = "mostFrequentRoute";
                        var routeLink = document.createElement("button");
                        routeLink.addEventListener("click", function () { fillRouteFields(item.DeparturePlace, item.ArrivalPlace) });
                        routeLink.innerText = showRoute(item);
                        spanElement.appendChild(routeLink);
                        $(spanElement).appendTo("#topRoutes");
                    });
                });
        });

        function fillRouteFields(depPlaceValue, arrPlaceValue) {
            var departurePlaceField = document.querySelectorAll(".departurePlace");
            var arrivalPlaceField = document.querySelectorAll(".arrivalPlace");
            for (i = 0; i < departurePlaceField.length; i++) {
                departurePlaceField[i].setAttribute("value", depPlaceValue);
                arrivalPlaceField[i].setAttribute("value", arrPlaceValue);
            }
        }

        function showRoute(item) {
            return item.DeparturePlace + " - " + item.ArrivalPlace;
        }

    </script>
}

